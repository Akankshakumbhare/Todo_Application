# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

name: v$(Rev:r)

jobs:
- job: LintAndTest
  displayName: 'Lint and Test React Code'
  steps:
  - script: |
      # Add your linting and testing commands here
      npm install --save-dev eslint@7.x eslint-config-airbnb@18.x eslint-plugin-import@2.x eslint-plugin-jsx-a11y@6.x eslint-plugin-react@7.x eslint-plugin-react-hooks@4.x @babel/eslint-parser@7.x @babel/core@7.x  @babel/plugin-syntax-jsx@7.x @babel/preset-env@7.x  @babel/preset-react@7.x
      [ -f .eslintrc.json ] || wget https://raw.githubusercontent.com/microverseinc/linters-config/master/react-redux/.eslintrc.json
      [ -f .babelrc ] || wget https://raw.githubusercontent.com/microverseinc/linters-config/master/react-redux/.babelrc
      npx eslint .

- job: BuildDockerImage
  displayName: 'Build and Push Docker Image'
  dependsOn: LintAndTest
  steps:
  - script: |
      buildtag="v$(Build.BuildNumber)"
      echo $buildtag
      
      # Log in to Docker Hub
      echo $(DOCKERHUB_PASSWORD) | docker login -u $(DOCKERHUB_USERNAME) --password-stdin
      
      # Build Docker image
      docker build -t $(DOCKERHUB_USERNAME)/todo-app:$buildtag .
      
      # Push Docker image to Docker Hub
      docker push $(DOCKERHUB_USERNAME)/todo-app:$buildtag
    displayName: 'Build and Push Docker Image'

